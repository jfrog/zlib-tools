#!/bin/bash
# Company:     JFrog
# Author:      David Cohen(davidc@jfrog.com)
# Date:        29/03/2022
# Description: Script searching for binaries using the deflateInit2 function. 
# Comments:    Binaries with zLib library dynamically-linked or statically-linked with symbols are checked.
#              Note: Binaries with zLib Statically-Linked without symbols are not analyzed by this script.

ARGC=$#
EXPECTED_ARGS=1

if [ $ARGC -ne $EXPECTED_ARGS ]; then
	echo "< List binaries using deflateInit2 function from zLib library >"
	echo "[USAGE]: $0 PATH"
else
	find $1 -print0 | while read -d $'\0' file
	do
		file_type=`file $file`
		if [[ "$file_type" == *"ELF"* ]]; then
			#echo "$file is an ELF file";
			linked_dynamic_libs=`ldd $file 2>/dev/null` 
			if grep -qi "libz" <<< $linked_dynamic_libs; then
				#echo "zLib dynamically linked";
				## look for deflateInit2 in the relocation table of the file
				grep_count=$(grep -ci "deflateInit2" <<< `objdump -R $file` )
			
				if [[ $grep_count -gt 0 ]]; then
					echo $file
				fi
			## in case we have symbols
			elif grep -qi "zlib" <<< `nm $file 2>/dev/null`; then 
				#echo "zLib statically linked";
				## look for the call of the function - so far it is using jump instead of call in the static lib' methods assembly so it seems legit and good enough to look for a call
				grep_count=$(grep -ci "call.*deflateInit2" <<< `objdump -d $file`)
				if [[ $grep_count -gt 0 ]]; then
					echo $file
				fi
			fi

		fi
	done
fi

